@*The Bootstrap styles that I used here that I have never used before are:
*container
*col
*col-3
*justify-content-evenly
*m-3
*row
*m-1

Andrew Luke
    IS413 - Sec 004
    Assignment 6

    Continuing the Bookstore project we started in Assignment #5, we are going to add Pagination to
    our web app (using Tag Helpers) so that the number of pages and navigation is automatically
    generated based on the number of items in the list.
    We will display 5 items per page.
    Improve the URLs so that the user can type /P2 to access the second page and /P3 to access the
    third page and so on.
    Use Bootstrap to display the information in an attractive way. Use at least three new Bootstrap
    commands that you have never used before that are different from those used in Chapter 7.
    (#notcoveredinthevideos #notmeanttobedifficult – List the commands you used in the comments
    when you submit the program.) The page navigation should function so that the current page is
    highlighted in the list of page numbers, and that hovering over a page changes the appearance of
    the link as well.
    We want to start tracking the number of pages in the book as well. Update the model to store the
    number of pages, and then update the database, and add the number of pages to the view.
    After you have incorporated the Pagination, add three of your own favorite books to the
    SeedData, and rebuild the database to test that the Pagination works as it should.

*@

@{
    ViewData["Title"] = "Home";
}
@model BookListViewModel

<div class="text-center">
    <h1 class="display-4">Spencer's Booklist</h1>
</div>
<div style="display:flex; flex-direction:row">
    <div class="col-3">
        <br /><br />
        <div style="position:fixed; width: 20%;" class="">
            <vc:navigation-menu />
        </div>
    </div>
    <div class="col-9">
        <div class="text-center">
            <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true" page-class="btn"
                 page-class-normal="btn-outline-dark"
                 page-class-selected="btn-primary"
                 class="btn-group pull-right m-1"
                 page-url-category="Model.Type">
            </div>
        </div>
        <div class="m-1">
            <div class="" style="justify-content: space-evenly;">
                @*row justify-content-evenly*@
                @foreach (var x in Model.Books)
                {
                    <partial name="BookList" model="x" />
                }
            </div>
            <div class="text-center">
                <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true" page-class="btn"
                     page-class-normal="btn-outline-dark"
                     page-class-selected="btn-primary"
                     class="btn-group pull-right m-1"
                     page-url-category="Model.Type">
                </div>
            </div>
        </div>
    </div>
</div>


