@*

Andrew Luke
IS413 - Sec 004
Assignment 7

Continuing the Bookstore project from Assignments #5 & #6, we are going to add the ability to
filter by book category (i.e. “Autobiography”, “Self-Help”, etc.) to our web app so that the
categories are automatically-generated and automatically filtered by the app.
Following the pattern in the videos/textbook:
    • Add the ability to filter by category in the Controller
    • Improve the URLs to a pattern that is more user-friendly
    • Build in the functionality so that the category is dynamically-displayed in the URL
    • Insert the category menu using the View Component method
    • Build the partial view used by the View Component to dynamically display the list of
    categories
    • Filter the results by category
    • Dynamically highlight the category that has been selected
    • Fix the page numbering to match the number of items by category
*@

@{
    ViewData["Title"] = "Home";
}
@model BookListViewModel

<div class="text-center">
    <h1 class="display-4">Spencer's Booklist</h1>
</div>
<div style="display:flex; flex-direction:row">
    <div class="col-3">
        <br /><br />
        <div style="position:fixed; width: 20%;" class="">
            <vc:navigation-menu />
        </div>
    </div>
    <div class="col-9">
        <div class="text-center">
            <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true" page-class="btn"
                 page-class-normal="btn-outline-dark"
                 page-class-selected="btn-primary"
                 class="btn-group pull-right m-1"
                 page-url-category="Model.Type">
            </div>
        </div>
        <div class="m-1">
            <div class="" style="justify-content: space-evenly;">
                @*row justify-content-evenly*@
                @foreach (var x in Model.Books)
                {
                    <partial name="BookList" model="x" />
                }
            </div>
            <div class="text-center">
                <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true" page-class="btn"
                     page-class-normal="btn-outline-dark"
                     page-class-selected="btn-primary"
                     class="btn-group pull-right m-1"
                     page-url-category="Model.Type">
                </div>
            </div>
        </div>
    </div>
</div>


